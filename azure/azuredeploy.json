{

    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",

    "contentVersion": "1.0.0.0",

    "parameters": {

        "namePrefix": {

            "type": "string",

            "metadata": {

                "description": "String used as a base for naming resources (6 alphanumeric characters or less).  A unique hash is prepended to the string for some resources, while resource-specific information is appended."

            },

            "minLength": 1,

            "maxLength": 6

        },

        "adminUsername": {

            "type": "string",

            "metadata": {

                "description": "Username for the virtual machine."

            },

            "minLength": 1,

            "maxLength": 74

        },

        "adminPassword": {

            "type": "securestring",

            "metadata": {

                "description": "Password for the virtual machine."

            },

            "minLength": 12,

            "maxLength": 64

        },

        "vmSize": {

            "type": "string",

            "defaultValue": "Standard_D2_v2",

            "allowedValues": [

                "Standard_A1",

                "Standard_A2",

                "Standard_A3",

                "Standard_A4",

                "Standard_A5",

                "Standard_A6",

                "Standard_A7",

                "Standard_D1",

                "Standard_D2",

                "Standard_D3",

                "Standard_D4",

                "Standard_D11",

                "Standard_D12",

                "Standard_D13",

                "Standard_D14",

                "Standard_D1_v2",

                "Standard_D2_v2",

                "Standard_D3_v2",

                "Standard_D4_v2",

                "Standard_D5_v2",

                "Standard_D11_v2",

                "Standard_D12_v2",

                "Standard_D13_v2",

                "Standard_D14_v2",

                "Standard_D15_v2",

                "Standard_F1",

                "Standard_F2",

                "Standard_F4",

                "Standard_F8",

                "Standard_F16"

            ],

            "metadata": {

                "description": "Size of the virtual machine used for hosting the containers"

            }

        }

    },

    "variables": {

        "imagePublisher": "Canonical",

        "imageOffer": "UbuntuServer",

        "ubuntuOSVersion": "16.04.0-LTS",

        "namingInfix": "[toLower(substring(concat(parameters('namePrefix'), uniqueString(resourceGroup().id)), 0, 9))]",

        "OSDiskName": "osdiskforhyperledgerdocker",

        "nicName": "[concat(variables('namingInfix'), '-nic')]",

        "dockerExtensionName": "DockerExtension",

        "HyperledgerExtensionName": "HyperledgerExtension",

        "addressPrefix": "10.0.0.0/16",

        "subnetName": "[concat(variables('namingInfix'), '-subnet')]",

        "subnetPrefix": "10.0.0.0/24",

        "storageAccountType": "Standard_LRS",

        "storageAccountName": "[concat(variables('namingInfix'), 'storage')]",

        "publicIPAddressName": "[concat(variables('namingInfix'), '-publicip')]",

        "dnsName": "[variables('namingInfix')]",

        "publicIPAddressType": "Dynamic",

        "vmStorageAccountContainerName": "vhds",

        "vmName": "[concat(variables('namingInfix'), '-vm')]",

        "virtualNetworkName": "[concat(variables('namingInfix'), '-vnet')]",

        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",

        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"

    },

    "resources": [

        {

            "type": "Microsoft.Storage/storageAccounts",

            "name": "[variables('storageAccountName')]",

            "apiVersion": "2015-05-01-preview",

            "location": "[resourceGroup().location]",

            "properties": {

                "accountType": "[variables('storageAccountType')]"

            }

        },

        {

            "apiVersion": "2015-05-01-preview",

            "type": "Microsoft.Network/publicIPAddresses",

            "name": "[variables('publicIPAddressName')]",

            "location": "[resourceGroup().location]",

            "properties": {

                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",

                "dnsSettings": {

                    "domainNameLabel": "[variables('dnsName')]"

                }

            }

        },

        {

            "apiVersion": "2015-05-01-preview",

            "type": "Microsoft.Network/virtualNetworks",

            "name": "[variables('virtualNetworkName')]",

            "location": "[resourceGroup().location]",

            "properties": {

                "addressSpace": {

                    "addressPrefixes": [

                        "[variables('addressPrefix')]"

                    ]

                },

                "subnets": [

                    {

                        "name": "[variables('subnetName')]",

                        "properties": {

                            "addressPrefix": "[variables('subnetPrefix')]"

                        }

                    }

                ]

            }

        },

        {

            "apiVersion": "2015-05-01-preview",

            "type": "Microsoft.Network/networkInterfaces",

            "name": "[variables('nicName')]",

            "location": "[resourceGroup().location]",

            "dependsOn": [

                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",

                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"

            ],

            "properties": {

                "ipConfigurations": [

                    {

                        "name": "ipconfig1",

                        "properties": {

                            "privateIPAllocationMethod": "Dynamic",

                            "publicIPAddress": {

                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"

                            },

                            "subnet": {

                                "id": "[variables('subnetRef')]"

                            }

                        }

                    }

                ]

            }

        },

        {

            "apiVersion": "2015-05-01-preview",

            "type": "Microsoft.Compute/virtualMachines",

            "name": "[variables('vmName')]",

            "location": "[resourceGroup().location]",

            "dependsOn": [

                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",

                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"

            ],

            "properties": {

                "hardwareProfile": {

                    "vmSize": "[parameters('vmSize')]"

                },

                "osProfile": {

                    "computerName": "[variables('vmName')]",

                    "adminUsername": "[parameters('adminUsername')]",

                    "adminPassword": "[parameters('adminPassword')]"

                },

                "storageProfile": {

                    "imageReference": {

                        "publisher": "[variables('imagePublisher')]",

                        "offer": "[variables('imageOffer')]",

                        "sku": "[variables('ubuntuOSVersion')]",

                        "version": "latest"

                    },

                    "osDisk": {

                        "name": "osdisk1",

                        "vhd": {

                            "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"

                        },

                        "caching": "ReadWrite",

                        "createOption": "FromImage"

                    }

                },

                "networkProfile": {

                    "networkInterfaces": [

                        {

                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"

                        }

                    ]

                }

            }

        },

        {

            "type": "Microsoft.Compute/virtualMachines/extensions",

            "name": "[concat(variables('vmName'),'/', variables('dockerExtensionName'))]",

            "apiVersion": "2015-05-01-preview",

            "location": "[resourceGroup().location]",

            "dependsOn": [

                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"

            ],

            "properties": {

                "publisher": "Microsoft.Azure.Extensions",

                "type": "DockerExtension",

                "typeHandlerVersion": "1.0",

                "autoUpgradeMinorVersion": true,

                "settings": {}

            }

        },

        {

            "type": "Microsoft.Compute/virtualMachines/extensions",

            "name": "[concat(variables('vmName'),'/', variables('HyperledgerExtensionName'))]",

            "apiVersion": "2015-05-01-preview",

            "location": "[resourceGroup().location]",

            "dependsOn": [

                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), variables('dockerExtensionName'))]"

            ],

            "properties": {

                "publisher": "Microsoft.Azure.Extensions",

                "type": "CustomScript",

                "typeHandlerVersion": "2.0",

                "autoUpgradeMinorVersion": true,

                "settings": {

                    "fileUris": [

                        "https://raw.githubusercontent.com/oscarkoe/hyperledger-on-azure/v2-typescript/azure/start-hyperledger.sh"

                    ],

                    "commandToExecute": "sh start-hyperledger.sh"

                }

            }

        }

    ]

}
